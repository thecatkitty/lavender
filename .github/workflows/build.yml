name: Build

on:
  pull_request:
    branches: [main]
  push:
    tags: [0.*]

jobs:
  Build:
    name: Build for ${{ matrix.platform.name }}

    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - name: DOS 2.0+ (COM)
            target: dospc-com
            apts: gcc-mingw-w64-i686
            flags: -DCMAKE_TOOLCHAIN_FILE=cmake/DOS-GCC-IA16.cmake -DDOS_TARGET_COM=1
          - name: DOS 3.0+ (EXE)
            target: dospc-exe
            apts: gcc-mingw-w64-i686
            flags: -DCMAKE_TOOLCHAIN_FILE=cmake/DOS-GCC-IA16.cmake
          - name: Linux
            target: linux
            apts: gcc-mingw-w64-x86-64 libsdl2-dev libsdl2-ttf-dev libfontconfig-dev libfluidsynth-dev libblkid-dev
          - name: Windows (IA-32)
            target: windows-ia32
            apts: gcc-mingw-w64-i686
            cc: i686-w64-mingw32-gcc
            flags: -DCMAKE_SYSTEM_NAME=Windows
          - name: Windows (x64)
            target: windows-x64
            apts: gcc-mingw-w64-x86-64
            cc: x86_64-w64-mingw32-gcc
            flags: -DCMAKE_SYSTEM_NAME=Windows

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install ${{ matrix.platform.apts }} cmake zip -y

      - name: Fetch DOS dependencies
        if: startsWith(matrix.platform.target, 'dospc')
        run: |
          sudo add-apt-repository ppa:tkchia/build-ia16
          sudo apt update
          sudo apt install gcc-ia16-elf libi86-ia16-elf -y

      - name: Fetch Windows dependencies
        if: startsWith(matrix.platform.target, 'windows')
        run: |
          wget -nv -P ext/ https://github.com/libsdl-org/SDL/releases/download/release-2.28.3/SDL2-devel-2.28.3-mingw.tar.gz
          wget -nv -P ext/ https://github.com/libsdl-org/SDL_ttf/releases/download/release-2.20.2/SDL2_ttf-devel-2.20.2-mingw.tar.gz
          tar -xf ext/SDL2-devel-2.28.3-mingw.tar.gz -C ext/
          tar -xf ext/SDL2_ttf-devel-2.20.2-mingw.tar.gz -C ext/
          mkdir ext/include
          cp -r ext/SDL2-2.28.3/i686-w64-mingw32/include/* ext/include/
          cp -r ext/SDL2_ttf-2.20.2/i686-w64-mingw32/include/* ext/include/

      - name: Build for ${{ matrix.platform.name }}
        env:
          CC: ${{ matrix.platform.cc }}
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          for lang in ENU CSY PLK
          do
            cmake -S . -B build -DCMAKE_INSTALL_PREFIX=bin/${{ matrix.platform.target }}/$lang -DLAV_LANG=$lang ${{ matrix.platform.flags }}
            cd build && make bundle && make install && cd ..
          done

      - name: Prepare release info
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git tag -l --format='%(contents:subject)' ${{ github.ref_name }} | sed -r "s/^.+: //" > bin/RELEASE.md
  
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: lavender
          path: |
            bin
            tools

  Release:

    runs-on: ubuntu-latest
    needs: Build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Fetch build output
        uses: actions/download-artifact@v3
        with:
          name: lavender
          
      - name: Prepare archive
        run: |
          mv tools bin/
          cd bin
          zip -r ../lavender-${{ github.ref_name }}.zip tools dospc-com dospc-exe windows-ia32 windows-x64

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Version ${{ github.ref_name }}
          body_path: bin/RELEASE.md
          files: lavender-${{ github.ref_name }}.zip
